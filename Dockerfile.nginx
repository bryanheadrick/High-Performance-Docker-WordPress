FROM nginx:1.25.3-alpine

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    libc-dev \
    make \
    openssl-dev \
    pcre-dev \
    zlib-dev \
    linux-headers \
    curl \
    gnupg \
    libxslt-dev \
    gd-dev \
    geoip-dev \
    gettext \
    git \
    cmake \
    ninja \
    go

# Install envsubst
RUN apk add --no-cache gettext

# Clone and build Brotli
RUN cd /tmp && \
    git clone https://github.com/google/brotli.git && \
    cd brotli && \
    mkdir out && cd out && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
    cmake --build . --config Release --target install

# Clone and build ngx_brotli
RUN cd /tmp && \
    git clone --recursive https://github.com/google/ngx_brotli.git && \
    cd ngx_brotli && \
    git submodule update --init

# Get Nginx source
RUN cd /tmp && \
    wget http://nginx.org/download/nginx-$(nginx -v 2>&1 | cut -d'/' -f2).tar.gz && \
    tar zxf nginx-$(nginx -v 2>&1 | cut -d'/' -f2).tar.gz && \
    cd nginx-$(nginx -v 2>&1 | cut -d'/' -f2) && \
    ./configure \
        --with-compat \
        --add-dynamic-module=/tmp/ngx_brotli && \
    make modules

# Create modules directory and copy the compiled module
RUN mkdir -p /usr/lib/nginx/modules && \
    cp /tmp/nginx-$(nginx -v 2>&1 | cut -d'/' -f2)/objs/ngx_http_brotli_filter_module.so /usr/lib/nginx/modules/ && \
    cp /tmp/nginx-$(nginx -v 2>&1 | cut -d'/' -f2)/objs/ngx_http_brotli_static_module.so /usr/lib/nginx/modules/

# Create modules configuration
RUN echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;" > /etc/nginx/modules/brotli.conf && \
    echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;" >> /etc/nginx/modules/brotli.conf

# Copy entrypoint script
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Clean up
RUN apk del git gcc libc-dev make pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev cmake ninja go && \
    rm -rf /tmp/*

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"] 